#pragma once

////////////////////////////////////////////////////////////////
// Module includes.
////////////////////////////////////////////////////////////////

#include "sol-texture/fwd.h"

////////////////////////////////////////////////////////////////
// Current target includes.
////////////////////////////////////////////////////////////////

#include "sol-command/i_command.h"

namespace sol
{
    class UpdateTextureManagerCommand final : public ICommand
    {
    public:
        ////////////////////////////////////////////////////////////////
        // Constructors.
        ////////////////////////////////////////////////////////////////

        UpdateTextureManagerCommand();

        UpdateTextureManagerCommand(const UpdateTextureManagerCommand&) = delete;

        UpdateTextureManagerCommand(UpdateTextureManagerCommand&&) = delete;

        ~UpdateTextureManagerCommand() noexcept override;

        UpdateTextureManagerCommand& operator=(const UpdateTextureManagerCommand&) = delete;

        UpdateTextureManagerCommand& operator=(UpdateTextureManagerCommand&&) = delete;

        ////////////////////////////////////////////////////////////////
        // Getters.
        ////////////////////////////////////////////////////////////////


        ////////////////////////////////////////////////////////////////
        // Setters.
        ////////////////////////////////////////////////////////////////

        void setTextureManager(TextureManager& manager);

        ////////////////////////////////////////////////////////////////
        // Run.
        ////////////////////////////////////////////////////////////////

        void finalize() override;

        void operator()() override;

        ////////////////////////////////////////////////////////////////
        // Debugging and visualization.
        ////////////////////////////////////////////////////////////////

        [[nodiscard]] std::string getVizLabel() const override;

    private:
        ////////////////////////////////////////////////////////////////
        // Member variables.
        ////////////////////////////////////////////////////////////////

        TextureManager* textureManager = nullptr;
    };
}  // namespace sol