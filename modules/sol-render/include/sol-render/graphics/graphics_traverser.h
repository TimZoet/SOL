#pragma once

////////////////////////////////////////////////////////////////
// Module includes.
////////////////////////////////////////////////////////////////

#include "sol-scenegraph/fwd.h"

////////////////////////////////////////////////////////////////
// Current target includes.
////////////////////////////////////////////////////////////////

#include "sol-render/common/i_traverser.h"
#include "sol-render/graphics/fwd.h"

namespace sol
{
    class GraphicsTraverser : public ITraverser
    {
    public:
        ////////////////////////////////////////////////////////////////
        // Constructors.
        ////////////////////////////////////////////////////////////////

        GraphicsTraverser();

        GraphicsTraverser(const GraphicsTraverser&) = delete;

        GraphicsTraverser(GraphicsTraverser&&) = delete;

        ~GraphicsTraverser() noexcept override;

        GraphicsTraverser& operator=(const GraphicsTraverser&) = delete;

        GraphicsTraverser& operator=(GraphicsTraverser&&) noexcept = delete;

        ////////////////////////////////////////////////////////////////
        // Getters.
        ////////////////////////////////////////////////////////////////

        [[nodiscard]] bool supportsNodeType(Node::Type type) const noexcept override;

        ////////////////////////////////////////////////////////////////
        // Setters.
        ////////////////////////////////////////////////////////////////

        ////////////////////////////////////////////////////////////////
        // Traversal.
        ////////////////////////////////////////////////////////////////

        void traverse(const Scenegraph& scenegraph, GraphicsRenderData& renderData);

    private:
        ////////////////////////////////////////////////////////////////
        // Member variables.
        ////////////////////////////////////////////////////////////////
    };
}  // namespace sol
