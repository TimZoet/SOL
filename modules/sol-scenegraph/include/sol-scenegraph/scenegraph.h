#pragma once

////////////////////////////////////////////////////////////////
// Module includes.
////////////////////////////////////////////////////////////////

//#include "dot/graph.h"

////////////////////////////////////////////////////////////////
// Current target includes.
////////////////////////////////////////////////////////////////

#include "sol-scenegraph/node.h"

namespace sol
{
    class Scenegraph
    {
    public:
        ////////////////////////////////////////////////////////////////
        // Constructors.
        ////////////////////////////////////////////////////////////////

        Scenegraph();

        Scenegraph(const Scenegraph&) = delete;

        Scenegraph(Scenegraph&&) = delete;

        ~Scenegraph() noexcept;

        Scenegraph& operator=(const Scenegraph&) = delete;

        Scenegraph& operator=(Scenegraph&&) = delete;

        ////////////////////////////////////////////////////////////////
        // Getters.
        ////////////////////////////////////////////////////////////////

        [[nodiscard]] Node& getRootNode() noexcept;

        [[nodiscard]] const Node& getRootNode() const noexcept;

        ////////////////////////////////////////////////////////////////
        // Debugging and visualization.
        ////////////////////////////////////////////////////////////////

        //void visualize(dot::Graph& graph) const;

    protected:
        ////////////////////////////////////////////////////////////////
        // Member variables.
        ////////////////////////////////////////////////////////////////

        NodePtr rootNode;
    };
}  // namespace sol