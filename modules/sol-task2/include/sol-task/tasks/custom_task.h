#pragma once

////////////////////////////////////////////////////////////////
// Standard includes.
////////////////////////////////////////////////////////////////

#include <functional>

////////////////////////////////////////////////////////////////
// Current target includes.
////////////////////////////////////////////////////////////////

#include "sol-task/fwd.h"
#include "sol-task/tasks/i_task.h"

namespace sol
{
    class CustomTask final : public ITask
    {
    public:
        ////////////////////////////////////////////////////////////////
        // Types.
        ////////////////////////////////////////////////////////////////

        using function_t = std::function<void()>;

        ////////////////////////////////////////////////////////////////
        // Constructors.
        ////////////////////////////////////////////////////////////////

        CustomTask() = delete;

        explicit CustomTask(TaskGraph& taskGraph);

        CustomTask(const CustomTask&) = delete;

        CustomTask(CustomTask&&) = delete;

        ~CustomTask() noexcept override;

        CustomTask& operator=(const CustomTask&) = delete;

        CustomTask& operator=(CustomTask&&) = delete;

        ////////////////////////////////////////////////////////////////
        // Setters.
        ////////////////////////////////////////////////////////////////

        void setFunction(function_t func);

        ////////////////////////////////////////////////////////////////
        // Compile.
        ////////////////////////////////////////////////////////////////

        [[nodiscard]] std::function<void()>
          compile(const CompiledGraph::Node&                            node,
                  std::unordered_map<const ITaskResource*, IProvider*>& providerLookup) override;

    private:
        ////////////////////////////////////////////////////////////////
        // Member variables.
        ////////////////////////////////////////////////////////////////

        function_t function;
    };
}  // namespace sol
